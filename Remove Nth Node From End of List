/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        ListNode * start = new ListNode();   // a dummpy node named start
        start -> next = head;                // pointing towards head
        ListNode* fast = start;              // two pointers
        ListNode* slow = start;

        for(int i = 1 ; i <= n; ++i)         // traverse until n 
            fast = fast -> next;

        while(fast -> next != NULL){         // start to traverse both pointer
            fast = fast -> next;
            slow = slow -> next;
        }

        slow -> next = slow -> next -> next;     // adding the new link escaping the element to delete

        return start -> next;     // returning the head 
    }
};
