/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool evaluateTree(TreeNode* root) {
        // base case 
        if(root == NULL) return true;

        // Step 1 : go to the leaf node
        bool leftResult = evaluateTree(root -> left);
        bool rightResult = evaluateTree(root -> right);

        // Step 2 : while coming back operate 

        // non leaf
        if(root -> val == 2)
            return leftResult || rightResult;
        if(root -> val == 3)
            return leftResult && rightResult;
        
        // leaf
        return (root -> val == 0) ? false : true;
    }
};

// TC : O(n)
// SC : O(n)
