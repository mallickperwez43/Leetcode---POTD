class Solution {
public:
    vector<int> productExceptSelf(vector<int>& nums) {
        // Initialize vectors to store left and right products
        vector<int> left(nums.size()), right(nums.size());
        // Initialize vector to store final answer
        vector<int> ans(nums.size());
        
        // Calculate left products
        left[0] = 1; // The product of elements to the left of the first element is 1
        for(int i = 0; i < nums.size() - 1; i++){
            left[i + 1] = left[i] * nums[i];
        }
        
        // Calculate right products
        right[nums.size() - 1] = 1; // The product of elements to the right of the last element is 1
        for(int i = nums.size() - 2; i > -1; i--){
            right[i] = right[i + 1] * nums[i + 1];
        }

        // Multiply left and right products to get final result
        for(int i = 0 ; i < nums.size(); i++){
            ans[i] = left[i] * right[i];
        }
        
        return ans; // Return the final answer
    }
};
