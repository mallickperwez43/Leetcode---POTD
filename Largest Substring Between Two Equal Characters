//using map
class Solution {
public:
    int maxLengthBetweenEqualCharacters(string s) {
        unordered_map<char,int> firstIndex;
        int ans = -1;

        for(int i = 0; i < s.size(); i++){
            if(firstIndex.find(s[i]) != firstIndex.end()){
                ans = max(ans, i - firstIndex[s[i]] - 1);
            }
            else{
                firstIndex[s[i]] = i;
            }
        }
        return ans;
    }
};

// using vector
class Solution {
public:
    int maxLengthBetweenEqualCharacters(string s) {
        vector<int> firstOcc(26, -1);
        vector<int> repeatedOcc(26, -1);
        int ans = -1;

        for(int i = 0; i < s.size(); i++){
            int temp = s[i] - 'a';

            if(firstOcc[temp] == -1){
                firstOcc[temp] = i;
            }
            else{
                repeatedOcc[temp] = i;
                ans = max(ans , repeatedOcc[temp] - firstOcc[temp] - 1);
            }
        }

        return ans;
    }
};
